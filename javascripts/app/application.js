// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["require", "exports", "module", "log", "backbone", "backbone.paginator"], function(require, exports, module, log, Backbone) {
  var App;
  App = (function(_super) {

    __extends(App, _super);

    function App() {
      this.pagelets = {};
      this.models = {};
      this.views = {};
      this.collections = {};
      this.el = $("#app");
      this.log = require("log");
      this.Collection = (function(_super1) {

        __extends(Collection, _super1);

        function Collection() {
          return Collection.__super__.constructor.apply(this, arguments);
        }

        return Collection;

      })(Backbone.Collection);
      this.View = (function(_super1) {

        __extends(View, _super1);

        function View() {
          return View.__super__.constructor.apply(this, arguments);
        }

        return View;

      })(Backbone.View);
      this.Model = (function(_super1) {

        __extends(Model, _super1);

        function Model() {
          return Model.__super__.constructor.apply(this, arguments);
        }

        return Model;

      })(Backbone.Model);
      this.Pagelet = (function(_super1) {

        __extends(Pagelet, _super1);

        function Pagelet(el) {
          this.el = el;
        }

        return Pagelet;

      })(this.View);
    }

    App.prototype.start = function() {};

    return App;

  })(Backbone.View);
  Backbone.Paginator.clientPager.prototype.whereExpanded = function(attrs) {
    return _.filter(this.origModels, function(model) {
      var key;
      for (key in attrs) {
        if (attrs[key] !== model.get(key)) {
          return false;
        }
      }
      return true;
    });
  };
  return App;
});
