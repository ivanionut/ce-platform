// Generated by CoffeeScript 1.3.3
var clearPlaceholder, clearPlaceholderAtSubmit, dataPlaceholders, i, l, placeholder, placeholderVal, restorePlaceHolder, setCaret;

dataPlaceholders = document.querySelectorAll("input[placeholder]");

l = dataPlaceholders.length;

setCaret = function(evt) {
  if (this.value === this.getAttribute("data-placeholder")) {
    this.setSelectionRange(0, 0);
    evt.preventDefault();
    evt.stopPropagation();
    return false;
  }
};

clearPlaceholder = function(evt) {
  if (!(evt.shiftKey && evt.keyCode === 16) && evt.keyCode !== 9) {
    if (this.value === this.getAttribute("data-placeholder")) {
      this.value = "";
      this.className = "active";
      if (this.getAttribute("data-type") === "password") {
        return this.type = "password";
      }
    }
  }
};

restorePlaceHolder = function() {
  if (this.value.length === 0) {
    this.value = this.getAttribute("data-placeholder");
    setCaret.apply(this, arguments_);
    this.className = "";
    if (this.type === "password") {
      return this.type = "text";
    }
  }
};

clearPlaceholderAtSubmit = function(evt) {
  var i, placeholder, _results;
  i = 0;
  placeholder = void 0;
  _results = [];
  while (i < l) {
    placeholder = dataPlaceholders[i];
    if (placeholder.value === placeholder.getAttribute("data-placeholder")) {
      placeholder.value = "";
    }
    _results.push(i++);
  }
  return _results;
};

i = 0;

placeholder = void 0;

placeholderVal = void 0;

while (i < l) {
  placeholder = dataPlaceholders[i];
  placeholderVal = placeholder.getAttribute("placeholder");
  placeholder.setAttribute("data-placeholder", placeholderVal);
  placeholder.removeAttribute("placeholder");
  if (placeholder.value.length === 0) {
    placeholder.value = placeholderVal;
    if (placeholder.type === "password") {
      placeholder.type = "text";
    }
  } else {
    placeholder.className = "active";
  }
  placeholder.addEventListener("focus", setCaret, false);
  placeholder.addEventListener("drop", setCaret, false);
  placeholder.addEventListener("click", setCaret, false);
  placeholder.addEventListener("keydown", clearPlaceholder, false);
  placeholder.addEventListener("keyup", restorePlaceHolder, false);
  placeholder.addEventListener("blur", restorePlaceHolder, false);
  placeholder.form.addEventListener("submit", clearPlaceholderAtSubmit, false);
  i++;
}
