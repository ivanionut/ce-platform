// Generated by CoffeeScript 1.3.3

ce.module("ui", function(self, ce, Backbone, Marionette, $, _, models) {
  return self.SelectAllCheckBox = Backbone.View.extend({
    template: "ui-selectallcheckbox",
    qtipSelectTemplate: "ui-selectallqtip",
    qtipDeselectTemplate: "ui-deselectallqtip",
    initialize: function() {
      this.collection.on("reset", this.determineCheckedStatus, this);
      self.on("selected_count_changed", this.determineCheckedStatus, this);
    },
    events: {
      "change .js-check-all": "selectAllVisibleParticipants"
    },
    render: function() {
      var _temp;
      this.$el.empty();
      _temp = _.template(ce.templates.get(this.template));
      this.$el.html(_temp);
      this.$el.qtip({
        content: "PLACEHOLDER",
        position: {
          my: "middle left",
          at: "middle right"
        },
        show: function() {
          return false;
        },
        hide: "unfocus"
      });
      return self.trigger("selectallcheckbox_rendered");
    },
    deselectAllParticipants: function() {
      _.forEach(this.collection.origModels, function(model) {
        return model.set({
          ISSELECTED: false
        });
      });
      self.trigger("selected_count_changed");
      self.trigger("selectallcheckbox_deselectall");
    },
    determineCheckedStatus: function() {
      var totalSelected;
      totalSelected = 0;
      _.forEach(this.collection.models, function(model) {
        if (model.get("ISSELECTED")) {
          return totalSelected++;
        }
      });
      if (totalSelected === this.collection.perPage) {
        this.$el.find(".js-check-all").attr("checked", true);
      } else {
        this.$el.find(".js-check-all").attr("checked", false);
      }
    },
    selectAllParticipants: function() {
      _.forEach(this.collection.origModels, function(model) {
        return model.set({
          ISSELECTED: true
        });
      });
      self.trigger("selected_count_changed");
      self.trigger("selectallcheckbox_selectall");
    },
    selectAllVisibleParticipants: function() {
      var curr;
      curr = this;
      this.$el.qtip("hide");
      if (this.$el.find(".js-check-all").is(":checked")) {
        _.forEach(this.collection.models, function(model) {
          return model.set({
            ISSELECTED: true
          });
        });
        this.$el.qtip("option", "content.text", _.template(ce.templates.get(this.qtipSelectTemplate)));
        this.$el.qtip("show");
        $($.find("a.js-select-all-participants")).click(function() {
          curr.selectAllParticipants();
          return curr.$el.qtip("hide");
        });
        self.trigger("selectallcheckbox_selectvisible");
      } else {
        if (this.collection.getSelectedCount() === this.collection.getTotalCount()) {
          this.$el.qtip("option", "content.text", _.template(ce.templates.get(this.qtipDeselectTemplate)));
          this.$el.qtip("show");
          $($.find("a.js-deselect-all-participants")).click(function() {
            curr.deselectAllParticipants();
            return curr.$el.qtip("hide");
          });
        }
        _.forEach(this.collection.models, function(model) {
          return model.set({
            ISSELECTED: false
          });
        });
        self.trigger("selectallcheckbox_deselectvisible");
      }
      self.trigger("selected_count_changed");
    }
  });
});
