// Generated by CoffeeScript 1.3.3

ce.module("activity.participants", function(self, ce, Backbone, Marionette, $, _) {
  return self.StatusDate = Backbone.View.extend({
    template: "activity_participants-statusdate",
    initialize: function() {
      this.model.on("change", this.render, this);
      this.model.on("change:CURRSTATUSID", this.updateParentModel, this);
    },
    model: self.StatusDateModel,
    events: {
      "click .js-edit-status-date": "revealStatusDateEditor",
      "click .js-cancel-edit-date": "hideStatusDateEditor",
      "click .js-save-edited-date": "saveEditedStatusDate",
      "click .js-view-attendee-status-info": "updateViewAttendeeStatuses"
    },
    render: function() {
      var _temp;
      this.$el.empty();
      _temp = _.template(ce.templates.get(this.template));
      this.$el.html(_temp(this.model.toJSON()));
      this.$el.find(".js-edit-date-field").mask("99/99/9999");
      return this;
    },
    hideStatusDateEditor: function() {
      this.$el.find(".js-edit-attendee-date").hide();
      this.$el.find(".js-view-attendee-date").show();
    },
    revealStatusDateEditor: function() {
      this.$el.find(".js-edit-date-field").val(this.$el.find(".js-hidden-current-attendee-date").val());
      this.$el.find(".js-view-attendee-date").hide();
      this.$el.find(".js-edit-attendee-date").show();
    },
    saveEditedStatusDate: function() {
      Backbone.emulateHTTP = true;
      Backbone.emulateJSON = true;
      switch (this.model.get("CURRSTATUSID")) {
        case 1:
          this.model.save({
            CURRSTATUSDATE: this.$el.find(".js-edit-date-field").val(),
            CURRSTATUSID: this.model.get("CURRSTATUSID"),
            COMPLETEDATE: this.$el.find(".js-edit-date-field").val()
          });
          break;
        case 2:
          this.model.save({
            CURRSTATUSDATE: this.$el.find(".js-edit-date-field").val(),
            CURRSTATUSID: this.model.get("CURRSTATUSID"),
            REGISTERDATE: this.$el.find(".js-edit-date-field").val()
          });
          break;
        case 3:
          this.model.save({
            CURRSTATUSDATE: this.$el.find(".js-edit-date-field").val(),
            CURRSTATUSID: this.model.get("CURRSTATUSID"),
            REGISTERDATE: this.$el.find(".js-edit-date-field").val()
          });
          break;
        case 4:
          this.model.save({
            CURRSTATUSDATE: this.$el.find(".js-edit-date-field").val(),
            CURRSTATUSID: this.model.get("CURRSTATUSID"),
            TERMDATE: this.$el.find(".js-edit-date-field").val()
          });
          break;
      }
    },
    updateParentModel: function() {
      this.options.parentModel.set(this.model.attributes);
    },
    updateViewAttendeeStatuses: function() {
      var container;
      container = this.$el.find(".js-current-view-status-date");
      this.model.set({
        CURRSTATUSID: parseInt($(arguments[0].currentTarget).attr("id").split("-")[1])
      });
    }
  });
});
