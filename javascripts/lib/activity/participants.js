// Generated by CoffeeScript 1.3.3

ce.module("activity.participants", function(self, ce, Backbone, Marionette, $, _, models, pagers) {
  return self.load = function(params) {
    self.details = {
      activityId: ce.activity.model.get("id"),
      AddlAttendees: params.legacy.AddlAttendees,
      currAttendee: params.legacy.currAttendee,
      currPerson: params.legacy.currPerson,
      MaxRegistrants: params.legacy.MaxRegistrants,
      NoChange: params.legacy.NoChange,
      nPageNo: params.legacy.nPageNo,
      nStatus: params.legacy.nStatus,
      selectedRows: params.legacy.selectedRows,
      selectedCount: params.legacy.selectedCount,
      totalAttendeeList: params.legacy.totalAttendeeList,
      rowsPerPage: params.legacy.rowsPerPage,
      totalPages: params.legacy.totalPages
    };
    self.paginatorCollection = pagers.clientActivity_participants.extend({
      server_api: {
        "$format": "json",
        "$top": function() {
          this.totalPages * this.perPage;
        },
        "key": self.details.activityId,
        "orderby": "fullName",
        "$skip": function() {
          this.totalPages * this.perPage;
        }
      },
      paginator_ui: {
        "firstPage": 1,
        "currentPage": self.details.nPageNo,
        "perPage": 15
      },
      getCompleteCount: function() {
        return this.whereExpanded({
          STATUSID: 1
        }).length;
      },
      getFilteredCount: function() {
        return this.sortedAndFilteredModels.length;
      },
      getInProgressCount: function() {
        return this.whereExpanded({
          STATUSID: 2
        }).length;
      },
      getRegisterCount: function() {
        return this.whereExpanded({
          STATUSID: 3
        }).length;
      },
      getSelected: function() {
        return this.whereExpanded({
          ISSELECTED: true
        });
      },
      getSelectedCount: function() {
        return this.whereExpanded({
          ISSELECTED: true
        }).length;
      },
      getTermCount: function() {
        return this.whereExpanded({
          STATUSID: 4
        }).length;
      },
      getTotalCount: function() {
        return this.information.totalUnfilteredRecords;
      }
    });
    models.Activity_participant.prototype.idAttribute = "ID";
    self.collection = new self.paginatorCollection;
    self.on("participant_removed participants_removed", function(models) {
      _.forEach(models, function(model) {
        self.collection.origModels.splice(self.collection.origModels.indexOf(model), 1);
      });
      self.collection.goTo(self.collection.currentPage);
    });
    self.StatusDateModel = models.Activity_participant.extend({
      url: "/ajax_adm_activity/saveAttendeeDate"
    });
    self.topbar = new self.Topbar({
      el: ".js-top-bar"
    }).render();
    self.loader = new ce.ui.Loader({
      el: "#tier3"
    });
    self.loader.start();
    self.on("data_loaded", function() {
      self.loader.stop();
      self.adder = new self.Adder({
        el: ".js-add-participant",
        collection: self.collection,
        defaults: {
          ID: 0,
          COMPLETEDATE: "",
          FIRSTNAME: "",
          LASTNAME: "",
          NAME: "",
          MDFLAG: "N",
          PERSONID: 0,
          REGISTERDATE: "",
          STATUSID: 3,
          TERMDATE: ""
        }
      }).render();
      self.printer = new self.Printer({
        el: ".js-printer",
        collection: self.collection
      }).render();
      self.actions = new self.Actions({
        el: ".js-partic-actions",
        collection: self.collection
      }).render();
      self.filter = new self.Filter({
        el: ".js-attendee-filter",
        collection: self.collection
      }).render();
      self.pager = new ce.ui.Pager({
        el: ".js-pager-container",
        collection: self.collection
      }).render();
    });
    self.list = new self.List({
      el: ".js-attendee-rows",
      collection: self.collection
    });
    self.selectall = new ce.ui.SelectAllCheckBox({
      el: ".js-selectall-placeholder",
      collection: self.collection
    }).render();
    self.bottombar = new self.Bottombar({
      el: ".js-bottom-bar"
    }).render();
    self.trigger("page_loaded");
  };
}, ce._core.models, ce._core.pagers);
