// Generated by CoffeeScript 1.3.3
(function() {

  ce.module("ui.actionMenu", function(self, ce, Backbone, Marionette, $, _) {
    var defineVars;
    defineVars = function(oRecord) {
      var oPerson, sPersonNameTemp;
      oPerson = new Object();
      oPerson.oLink = $(oRecord);
      oPerson.oPersonRow = oPerson.oLink.parents(".AllAttendees");
      oPerson.nAttendee = oPerson.oPersonRow.find(".personId").val();
      oPerson.nPerson = oPerson.oPersonRow.find(".personId").val();
      oPerson.nAttendee = oPerson.oPersonRow.find(".attendeeId").val();
      oPerson.sAction = oPerson.oLink.parent().attr("class");
      sPersonNameTemp = oPerson.oPersonRow.find(".PersonLink").html();
      oPerson.sPersonName = $.Trim($.ListGetAt(sPersonNameTemp, 2, ",")) + " " + $.Trim($.ListGetAt(sPersonNameTemp, 1, ","));
      return oPerson;
    };
    $.fn.isPerson = function() {
      return this.each(function() {
        var oPersonActionMenu, oPersonRow;
        oPersonRow = $(this);
        return oPersonActionMenu = oPersonRow.find(".action-menu button").isPersonActionMenu();
      });
    };
    $.fn.isPersonActionLink = function() {
      return this.each(function() {
        return $(this).click(function(J) {
          var Result, oPerson;
          oPerson = defineVars(this);
          switch (oPerson.sAction) {
            case "assess":
              $.post("/Activity/AttendeeDetailAHAH", {
                ActivityID: nActivity,
                PersonID: oPerson.nPerson,
                AttendeeID: oPerson.nAttendee
              }, function(data) {
                return $("#PersonDetailContent").html(data);
              });
              $("#PersonDetailContainer").overlay({
                top: 100,
                left: 50,
                expose: {
                  color: "#333",
                  loadSpeed: 200,
                  opacity: 0.9
                },
                closeOnClick: false,
                onClose: function() {
                  updateRegistrants(nId);
                  return $("#PersonDetailContent").html("");
                },
                api: true
              }).load();
              break;
            case "pifform":
              $.post(sMyself + "/Activity/AttendeeCDC", {
                ActivityID: nActivity,
                PersonID: oPerson.nPerson,
                AttendeeID: oPerson.nAttendee
              }, function(data) {
                return $("#pifForm").html(data);
              });
              $("#pifDialog").dialog({
                title: "PIF Form",
                modal: true,
                autoOpen: false,
                position: [40, 40],
                height: 450,
                width: 750,
                resizable: true,
                dragStop: function(ev, ui) {},
                buttons: {
                  Save: function() {
                    $("#frmCDC").ajaxSubmit();
                    addMessage("PIF successfully updated.", 250, 6000, 4000);
                    return $(this).dialog("close");
                  },
                  Cancel: function() {
                    return $(this).dialog("close");
                  }
                },
                overlay: {
                  opacity: 0.5,
                  background: "black"
                },
                close: function() {
                  return $("#pifForm").html("");
                },
                resizeStop: function(ev, ui) {
                  return $("#pifForm").css("height", ui.size.height - 73 + "px");
                }
              });
              $("#pifDialog").dialog("open");
              break;
            case "eCMECert":
              $.post("/Activity/emailCert", {
                ActivityID: nActivity,
                PersonID: oPerson.nPerson,
                AttendeeID: oPerson.nAttendee
              }, function(data) {
                return $("#email-cert-dialog").html(data);
              });
              $("#email-cert-dialog").dialog({
                title: "Email Certificate",
                modal: true,
                autoOpen: true,
                height: 300,
                width: 400,
                resizable: false,
                overlay: {
                  opacity: 0.5,
                  background: "black"
                },
                buttons: {
                  Save: function() {
                    $("#frmEmailCert").ajaxSubmit({
                      success: function(data) {
                        return addMessage("Emailed certificate successfully.", 250, 6000, 4000);
                      }
                    });
                    updateActions();
                    return $(this).dialog("close");
                  },
                  Preview: function() {
                    return window.open("Report.CMECert?ActivityID=" + ccpd.tier2.nActivity + "&ReportID=5&SelectedMembers=" + oPerson.nPerson);
                  },
                  Cancel: function() {
                    return $(this).dialog("close");
                  }
                },
                open: function() {},
                close: function() {
                  $("#email-cert-dialog").html("");
                  return oPerson.nPerson = "";
                }
              });
              $("#email-cert-dialog").dialog("open");
              break;
            case "pCMECert":
              window.open("/Report/CMECert?ActivityID=" + ccpd.tier2.nActivity + "&ReportID=5&SelectedMembers=" + oPerson.nPerson);
              break;
            case "CNECert":
              window.open("/Report/CNECert?ActivityID=" + ccpd.tier2.nActivity + "&ReportID=6&SelectedMembers=" + oPerson.nPerson);
              break;
            case "credits":
              $.post("/Activity/AdjustCredits", {
                ActivityID: ccpd.tier2.nActivity,
                PersonID: oPerson.nPerson,
                AttendeeID: oPerson.nAttendee
              }, function(data) {
                return $("#CreditsDialog").html(data);
              });
              $("#CreditsDialog").dialog({
                title: "Adjust Credits",
                modal: true,
                autoOpen: true,
                height: 175,
                width: 400,
                resizable: false,
                overlay: {
                  opacity: 0.5,
                  background: "black"
                },
                buttons: {
                  Save: function() {
                    $("#formAdjustCredits").ajaxSubmit();
                    addMessage("Credits successfully updated.", 250, 6000, 4000);
                    updateActions();
                    return $(this).dialog("close");
                  },
                  Cancel: function() {
                    return $(this).dialog("close");
                  }
                },
                open: function() {},
                close: function() {
                  $("#CreditsDialog").html("");
                  return oPerson.nPerson = "";
                }
              });
              $("#CreditsDialog").dialog("open");
              break;
            case "togglemd":
              if ($("#md-status-" + oPerson.nAttendee).text() === "Yes") {
                Result = "N";
              } else {
                if ($("#md-status-" + oPerson.nAttendee).text() === "No") {
                  Result = "Y";
                }
              }
              $.ajax({
                url: "/AJAX_adm_Activity/updateMDStatus",
                type: "post",
                data: {
                  AttendeeID: oPerson.nAttendee,
                  MDNonMD: Result
                },
                dataType: "json",
                success: function(data) {
                  if (data.STATUS) {
                    addMessage(data.STATUSMSG, 250, 6000, 4000);
                    updateStats();
                    if (Result === "Y") {
                      return $("#md-status-" + oPerson.nAttendee).text("Yes");
                    } else {
                      if (Result === "N") {
                        return $("#md-status-" + oPerson.nAttendee).text("No");
                      }
                    }
                  } else {
                    return addError(data.STATUSMSG, 250, 6000, 4000);
                  }
                }
              });
              break;
            case "sendCertificate":
              if (confirm("Are you sure you want to send " + oPerson.sPersonName + " a copy of their ceritificate?")) {
                $.ajax({
                  url: "/AJAX_adm_Activity/sendCertificate",
                  type: "post",
                  data: {
                    activityId: ccpd.tier2.nActivity,
                    PersonID: oPerson.nPerson,
                    AttendeeID: oPerson.nAttendee,
                    returnFormat: "plain"
                  },
                  dataType: "json",
                  success: function(data) {
                    if (data.STATUS) {
                      return addMessage(data.STATUSMSG, 250, 6000, 4000);
                    } else {
                      return addError(data.STATUSMSG, 250, 6000, 4000);
                    }
                  }
                });
              }
              break;
            case "reset":
              if (confirm("Are you sure you want to reset the attendee record for " + oPerson.sPersonName + "?")) {
                if (confirm("Do you want to clear all payment information attached to current attendee record for " + oPerson.sPersonName + "?")) {
                  resetAttendee(ccpd.tier2.nActivity, oPerson.nAttendee, "Y");
                } else {
                  resetAttendee(ccpd.tier2.nActivity, oPerson.nAttendee, "N");
                }
              }
              break;
            case "remove":
              if (confirm("Are you sure you would like to remove " + oPerson.sPersonName + " from this activity?")) {
                $.ajax({
                  url: "/AJAX_adm_Activity/removeCheckedAttendees",
                  type: "post",
                  data: {
                    AttendeeList: oPerson.nAttendee,
                    ActivityID: ccpd.tier2.nActivity,
                    returnFormat: "plain"
                  },
                  dataType: "json",
                  success: function(data) {
                    if (data.STATUS) {
                      $("#attendeeRow-" + oPerson.nAttendee).fadeOut("medium");
                      addMessage(data.STATUSMSG, 250, 6000, 4000);
                      updateActions();
                      return updateStats();
                    } else {
                      addError(data.STATUSMSG, 250, 6000, 4000);
                      updateRegistrants(nId);
                      updateActions();
                      return updateStats();
                    }
                  }
                });
              }
          }
          return J.preventDefault();
        });
      });
    };
    return $.fn.isPersonActionMenu = function() {
      var $actionMenu;
      $actionMenu = $("#action_menu");
      return this.one("mouseover", function() {
        var oPerson, sMenuHTML;
        oPerson = defineVars(this);
        sMenuHTML = $actionMenu.html();
        sMenuHTML = $.Replace(sMenuHTML, "{personid}", oPerson.nPerson, "ALL");
        sMenuHTML = $.Replace(sMenuHTML, "{activityid}", ccpd.tier2.nActivity, "ALL");
        oPerson.oLink.addClass("clicked").after(sMenuHTML);
        oPerson.oLink.siblings("ul").find("a").find("span").html(oPerson.sPersonName).end().isPersonActionLink();
        return false;
      });
    };
  });

}).call(this);
