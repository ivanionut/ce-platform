// Generated by CoffeeScript 1.3.3

ce.module("ui", function(self, ce, Backbone, Marionette, $, _) {
  self.Pager = Backbone.View.extend({
    pagingTemplate: "ui-pager",
    sortColumn: "FULLNAME",
    initialize: function() {
      this.collection.on("reset", this.render, this);
    },
    events: {
      "click a.js-next-page": "nextPage",
      "click a.js-page": "selectPage",
      "click a.js-show-page-dropdown": "extendedDropdownFunctionality",
      "click .js-page-sizer": "preventClose",
      "change .js-page-sizer": "changePageSize",
      "click a.js-prev-page": "prevPage"
    },
    render: function() {
      var _temp;
      this.$el.empty();
      _temp = _.template(ce.templates.get(this.pagingTemplate));
      this.$el.html(_temp(this.collection.info()));
      this.$el.find(".js-page-sizer").val(this.collection.perPage);
      self.trigger("pager_loaded");
    },
    changePageSize: function(e) {
      var updatedValue;
      updatedValue = parseInt(e.currentTarget.value);
      if (typeof updatedValue === "number" && updatedValue !== this.collection.perPage && updatedValue > 0) {
        this.collection.howManyPer(parseInt(e.currentTarget.value));
        self.trigger("pager_page_size_changed");
      }
    },
    extendedDropdownFunctionality: function() {
      $(this.$el.find(".js-page-sizer")).focus();
    },
    nextPage: function(e) {
      e.preventDefault();
      if (this.collection.currentPage < this.collection.information.totalPages) {
        this.collection.nextPage();
        self.trigger("pager_next");
      }
    },
    preventClose: function(e) {
      return false;
    },
    prevPage: function(e) {
      e.preventDefault();
      this.collection.previousPage();
      self.trigger("pager_prev");
    },
    selectPage: function() {
      var pageNo;
      pageNo = parseInt($(arguments[0].currentTarget).attr("id").split("-")[1]);
      this.collection.goTo(pageNo);
      self.trigger("pager_page_selected");
    }
  });
});
