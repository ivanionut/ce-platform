// Generated by CoffeeScript 1.3.3

ce.module("ui", function(self, ce, Backbone, Marionette, $, _) {
  return self.Popup = Backbone.View.extend({
    render: function(params) {
      var centeredX, centeredY, defaults, settings, windowFeatures;
      defaults = {
        windowName: "Untitled Window",
        windowURL: "http://dev.ccpd.uc.edu/",
        centerBrowser: 0,
        centerScreen: 0,
        height: 200,
        left: 0,
        location: 0,
        menubar: 0,
        resizable: 0,
        scrollbars: 0,
        status: 0,
        width: 500,
        top: 0,
        toolbar: 0
      };
      settings = $.extend({}, defaults, params || {});
      windowFeatures = "height=" + settings.height + ",width=" + settings.width + ",toolbar=" + settings.toolbar + ",scrollbars=" + settings.scrollbars + ",status=" + settings.status + ",resizable=" + settings.resizable + ",location=" + settings.location + ",menuBar=" + settings.menubar;
      settings.windowName = settings.name || settings.windowName;
      settings.windowURL = settings.href || settings.windowURL;
      centeredY = void 0;
      centeredX = void 0;
      if (settings.centerBrowser) {
        if ($.browser.msie) {
          centeredY = (window.screenTop - 120) + (((document.documentElement.clientHeight + 120) / 2) - (settings.height / 2));
          centeredX = window.screenLeft + (((document.body.offsetWidth + 20) / 2) - (settings.width / 2));
        } else {
          centeredY = window.screenY + ((window.outerHeight / 2) - (settings.height / 2));
          centeredX = window.screenX + ((window.outerWidth / 2) - (settings.width / 2));
          window.open(settings.windowURL, settings.windowName, windowFeatures + ",left=" + centeredX + ",top=" + centeredY).focus();
        }
      } else if (settings.centerScreen) {
        centeredY = (screen.height - settings.height) / 2;
        centeredX = (screen.width - settings.width) / 2;
        window.open(settings.windowURL, settings.windowName, windowFeatures + ",left=" + centeredX + ",top=" + centeredY).focus();
      } else {
        window.open(settings.windowURL, settings.windowName, windowFeatures + ",left=" + settings.left + ",top=" + settings.top).focus();
      }
      return false;
    },
    events: {
      "change input": "change",
      "click .cancel": "cancel",
      "submit": "submitLogin"
    },
    initialize: function(params) {
      return this.render(pa);
    },
    change: function(event) {},
    submitLogin: function(params) {
      var $form, view;
      view = this;
      $form = $(view.el).find('form');
      $form.ajaxSubmit({
        dataType: 'json',
        success: function(data) {
          if (data.STATUS) {
            self.load(data.PAYLOAD);
            view.close();
          } else {
            $(view.el).find('.flash').text("Login failed!");
          }
        }
      });
      return false;
    },
    cancel: function() {}
  });
});
